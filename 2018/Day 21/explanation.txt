#ip 5               # Instruction pointer in register 5
seti 123 0 2        # [2] = 123
bani 2 456 2        # [2] &= 456
eqri 2 72 2         # [2] = [2]==72
addr 2 5 5          # [5] += [2]      // jump ahead 1 if [2] is 0
seti 0 0 5          # [5] = 0         // go back to line 1 - keep doing bitwise and until [2]=72
seti 0 5 2          # [2] = 0
bori 2 65536 4      # [4] = [2] | 65536
seti 6718165 9 2    # [2] = 6718165
bani 4 255 3        # [3] = [4] & 255
addr 2 3 2          # [2] += [3]
bani 2 16777215 2   # [2] &= 16777215
muli 2 65899 2      # [2] *= 65899
bani 2 16777215 2   # [2] &= 16777215
gtir 256 4 3        # [3] = 256>[4]
addr 3 5 5          # [5] += [3]      // skip next instruction if [3]
addi 5 1 5          # [5] += 1        // skip next instruction
seti 27 8 5         # [5] = 27        // jump to line 27
seti 0 4 3          # [3] = 0
addi 3 1 1          # [1] = [3] + 1
muli 1 256 1        # [1] *= 256
gtrr 1 4 1          # [1] = [1]>[4]
addr 1 5 5          # [5] += [1]      // jump ahead by [1]
addi 5 1 5          # [5] += 1        // jump ahead by 1
seti 25 8 5         # [5] = 28
addi 3 1 3          # [3] += 1
seti 17 3 5         # [5] = 17
setr 3 6 4          # [4] = [3]
seti 7 9 5          # [5] = 7
eqrr 2 0 3          # [3] = [2]==[0]   // this is the only line that references register 0
addr 3 5 5          # [5] += [3]
seti 5 1 5          # [5] = 5


0  C = 123
1  C &= 456
2  C = C==72
3  IP += C      // jump ahead 1 if C is 0
4  IP = 0         // go back to line 1 - keep doing bitwise and until C=72
5  C = 0
6  E = C | 65536
7  C = 6718165
8  D = E & 255
9  C += D
10 C &= 16777215
11 C *= 65899
12 C &= 16777215
13 D = 256>E
14 IP += D      // skip next instruction if D
15 IP += 1        // skip next instruction
16 IP = 27        // jump to line 27
17 D = 0
18 B = D + 1
19 B *= 256
20 B = B>E
21 IP += B      // jump ahead by B
22 IP += 1        // jump ahead by 1
23 IP = 28
24 D += 1
25 IP = 17
26 E = D
27 IP = 7
28 D = C==A   // this is the only line that references register 0
29 IP += D
30 IP = 5

5  C = 0
6  E = C | 65536
9  C = ((6718165 + (E & 255) & 16777215) * 65899) & 16777215
13 if E<256 goto line 9
   else
17 D = 0
18 B = D + 1
19 B *= 256
20 B = B>E
21 IP += B         // jump ahead by B
22 IP += 1         // jump ahead by 1
23 IP = 28
24 D += 1
25 IP = 17
26 E = D
27 IP = 7
28 D = C==A        // this is the only line that references register 0
29 IP += D
30 IP = 5          // go back to beginning